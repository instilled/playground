package instilled.playground;import static instilled.playground.Configuration.load;import static instilled.playground.Lang.resource;import static org.hamcrest.CoreMatchers.is;import static org.junit.Assert.assertThat;import java.util.List;import java.util.Map;import org.junit.Test;public class ConfigurationTest {	@Test	public void testConfigLoader() {		MyConfig cfg = load(MyConfig.class, resource("instilled/playground/my-config.yml"));		assertThat(cfg.stringProperty(), is("abc"))/**/;		assertThat(cfg.intProperty(), is(100));		assertThat(cfg.doubleProperty(), is(100.5));		assertThat(cfg.sub().stringProperty(), is("def"));		assertThat(cfg.sub().list().get(3), is(4));		assertThat(cfg.list().get(3), is(4));		assertThat(cfg.listComplex().get(3).get("stringProperty"), is("4"));		assertThat(cfg.sub().sub2().longProperty(), is(199L));		// Assert.assertThat(cfg.withDefault().stringProperty(),		// CoreMatchers.is("defaulted"));	}	public interface MyConfig {		String stringProperty();		int intProperty();		double doubleProperty();		MySubConfig sub();		List<Integer> list();		List<Map<String, String>> listComplex();		// Defaults doesn't work as I've issues		// calling the default method through a proxy		// instance.		//default MySubConfig2 withDefault() {		//  return new MySubConfig2() {		//    @Override		//	  public String stringProperty() {		//	    return "defaulted";		//    }		//  };		//}	}	public interface MySubConfig {		String stringProperty();		List<Integer> list();				MySubConfig2 sub2();	}	public interface MySubConfig2 {		Long longProperty();	}}